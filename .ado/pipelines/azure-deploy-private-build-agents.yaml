name: '[${{ parameters.environment }}] $(BuildDefinitionName).$(DayOfYear)$(Rev:.r)'

trigger: none

pr: none

parameters:
- name: environment
  displayName: 'Environment (Subscriptions)'
  type: string
  default: 'e2e'
  values:
  - e2e
  - int
  - prod

pool:
  vmImage: 'ubuntu-20.04'

variables:
- name:  'environment' # set the environment name as variable
  value: '${{ parameters.environment }}'
- name:  'workingDirectory'       # Terraform working directory
  value: 'src/infra/build-agents'
- name:  'azureServiceConnection' # environment specific service connection
  value: 'alwayson-${{ parameters.environment }}-serviceconnection'

- template: config/configuration.yaml # contains version numbers and global configuration settings
- template: config/variables-values-${{ parameters.environment }}.yaml # contains environment-specific values (non-secret)

stages:

- stage: deployinfrastructure
  displayName: 'Deploy Infrastructure' # Deploy Azure Infrastructure
  jobs:
  - job: deployterraform
    displayName: 'Deploy Terraform'
    steps:
    - checkout: self # checkout github repository

    # Check if terraform state store for the build agent exists, and create it if not
    - template: templates/steps-terraform-setup-statestore.yaml
      parameters:
        storageAccountName:   '$(buildAgentTerraformStorageAccount)'
        resourceGroupName:    '$(buildAgentTerraformResourceGroup)'
        usePrivateEndpoints:  'false' # this storage account must not be locked down to Private Endpoints, since this pipeline needs to run on Microsoft-hosted agents

    - template: templates/steps-terraform-init.yaml # Initialize Terraform
      parameters:
        terraformStorageAccountName:        '$(buildAgentTerraformStorageAccount)'
        terraformStorageResourceGroupName:  '$(buildAgentTerraformResourceGroup)'
        terraformStateFilename:             'terraform-agents-$(prefix).state'
        terraformWorkingDirectory:          '$(workingDirectory)'

    - template: templates/steps-terraform-apply.yaml
      parameters:
        jobName:                    'PrivateBuildAgentInfra'
        terraformWorkingDirectory:  '$(workingDirectory)'
        customPrefix:               '$(prefix)'

